Index: src/test/java/ru/javawebinar/topjava/service/MealServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/MealServiceTest.java	(revision dab84c5026d69048bf8eff6019fb64dfaebf1afe)
+++ src/test/java/ru/javawebinar/topjava/service/MealServiceTest.java	(date 1583244302493)
@@ -4,7 +4,6 @@
 import org.junit.Assert;
 import org.junit.Rule;
 import org.junit.Test;
-import org.junit.rules.ExpectedException;
 import org.junit.rules.Stopwatch;
 import org.junit.runner.Description;
 import org.junit.runner.RunWith;
@@ -38,9 +37,6 @@
 
     private static StringBuilder results = new StringBuilder();
 
-    @Rule
-    public ExpectedException thrown = ExpectedException.none();
-
     @Rule
     // http://stackoverflow.com/questions/14892125/what-is-the-best-practice-to-determine-the-execution-time-of-the-bussiness-relev
     public Stopwatch stopwatch = new Stopwatch() {
@@ -74,14 +70,14 @@
 
     @Test
     public void deleteNotFound() throws Exception {
-        thrown.expect(NotFoundException.class);
-        service.delete(1, USER_ID);
+        Assert.assertThrows(NotFoundException.class,
+                () -> service.delete(1, USER_ID));
     }
 
     @Test
     public void deleteNotOwn() throws Exception {
-        thrown.expect(NotFoundException.class);
-        service.delete(MEAL1_ID, ADMIN_ID);
+        Assert.assertThrows(NotFoundException.class,
+                () -> service.delete(MEAL1_ID, ADMIN_ID));
     }
 
     @Test
@@ -102,14 +98,14 @@
 
     @Test
     public void getNotFound() throws Exception {
-        thrown.expect(NotFoundException.class);
-        service.get(MEAL1_ID, ADMIN_ID);
+        Assert.assertThrows(NotFoundException.class,
+                () -> service.get(MEAL1_ID, ADMIN_ID));
     }
 
     @Test
     public void getNotOwn() throws Exception {
-        thrown.expect(NotFoundException.class);
-        service.get(MEAL1_ID, ADMIN_ID);
+        Assert.assertThrows(NotFoundException.class,
+                () -> service.get(MEAL1_ID, ADMIN_ID));
     }
 
     @Test
@@ -121,9 +117,9 @@
 
     @Test
     public void updateNotFound() throws Exception {
-        thrown.expect(NotFoundException.class);
-        thrown.expectMessage("Not found entity with id=" + MEAL1_ID);
-        service.update(MEAL1, ADMIN_ID);
+        NotFoundException ex = Assert.assertThrows(NotFoundException.class,
+                () -> service.update(MEAL1, ADMIN_ID));
+        Assert.assertEquals("Not found entity with id=" + MEAL1_ID, ex.getMessage());
     }
 
     @Test
